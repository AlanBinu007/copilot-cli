// Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

// This program generates the version and version hash. It is invoked by running `go generate` from the root command
package main

import (
	"log"
	"os"
	"os/exec"
	"path/filepath"
	"strings"
	// "time"

	"text/template"

)

const version = "badgoose" // placeholder

const versionTemplate = `// Code generated by go generate; DO NOT EDIT.
// This file was generated by ðŸ¤–
package version

const Version = "{{.Version}}"
const GitHash = "{{.Hash}}"
`

type versionInfo struct {
	// Timestamp time.Time
	Version string
	Hash    string
}

func gitHash() string {
	cmd := exec.Command("git", "rev-parse", "--short=7", "HEAD")
	hash, err := cmd.Output()
	if err != nil {
		return "UNKNOWN"
	}
	return strings.TrimSpace(string(hash))
}

func main() {
	path, _ := os.Getwd()
	dest := filepath.Join(path, "version", "version.go")

	f, err := os.Create(dest)
	if err != nil {
		log.Fatalf("Unable to create output version file: %v", err)
	}
	defer f.Close()

	hash := gitHash()

	t := template.Must(template.New("").Parse(versionTemplate))

	info := versionInfo{
		// Timestamp: time.Now(),
		Version: version,
		Hash: hash,
	}

	err = t.Execute(f, info)
	if err != nil {
		log.Fatalf("Error applying template: %v", err)
	}
}
