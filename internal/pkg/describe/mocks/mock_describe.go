// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/pkg/describe/describe.go

// Package mocks is a generated GoMock package.
package mocks

import (
	cloudformation "github.com/aws/aws-sdk-go/service/cloudformation"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockResourceIdentifier is a mock of ResourceIdentifier interface
type MockResourceIdentifier struct {
	ctrl     *gomock.Controller
	recorder *MockResourceIdentifierMockRecorder
}

// MockResourceIdentifierMockRecorder is the mock recorder for MockResourceIdentifier
type MockResourceIdentifierMockRecorder struct {
	mock *MockResourceIdentifier
}

// NewMockResourceIdentifier creates a new mock instance
func NewMockResourceIdentifier(ctrl *gomock.Controller) *MockResourceIdentifier {
	mock := &MockResourceIdentifier{ctrl: ctrl}
	mock.recorder = &MockResourceIdentifierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockResourceIdentifier) EXPECT() *MockResourceIdentifierMockRecorder {
	return m.recorder
}

// URI mocks base method
func (m *MockResourceIdentifier) URI(envName string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "URI", envName)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// URI indicates an expected call of URI
func (mr *MockResourceIdentifierMockRecorder) URI(envName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "URI", reflect.TypeOf((*MockResourceIdentifier)(nil).URI), envName)
}

// MockstackDescriber is a mock of stackDescriber interface
type MockstackDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockstackDescriberMockRecorder
}

// MockstackDescriberMockRecorder is the mock recorder for MockstackDescriber
type MockstackDescriberMockRecorder struct {
	mock *MockstackDescriber
}

// NewMockstackDescriber creates a new mock instance
func NewMockstackDescriber(ctrl *gomock.Controller) *MockstackDescriber {
	mock := &MockstackDescriber{ctrl: ctrl}
	mock.recorder = &MockstackDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockstackDescriber) EXPECT() *MockstackDescriberMockRecorder {
	return m.recorder
}

// DescribeStacks mocks base method
func (m *MockstackDescriber) DescribeStacks(input *cloudformation.DescribeStacksInput) (*cloudformation.DescribeStacksOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeStacks", input)
	ret0, _ := ret[0].(*cloudformation.DescribeStacksOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeStacks indicates an expected call of DescribeStacks
func (mr *MockstackDescriberMockRecorder) DescribeStacks(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeStacks", reflect.TypeOf((*MockstackDescriber)(nil).DescribeStacks), input)
}
